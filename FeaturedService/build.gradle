/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:" + springBootVersion)
    }

    repositories {
		mavenCentral()
    }
}

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Service Registration', 'Implementation-Version': version
    }
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter:' + springBootVersion,
            'org.springframework.boot:spring-boot-starter-web:' + springBootVersion,
            'org.springframework.boot:spring-boot-starter-thymeleaf:' + springBootVersion,
            'org.springframework.data:spring-data-commons:' + springDataCommonsVersion,
            'org.springframework.boot:spring-boot-starter-test:' + springBootVersion,
            'org.springframework.boot:spring-boot-starter-data-jpa:' + springBootVersion,
            'org.hsqldb:hsqldb:' + hsqldbVersion,
            'org.springframework.cloud:spring-cloud-starter:' + springCloudStarterVersion,
            'org.springframework.cloud:spring-cloud-starter-eureka-server:' + springCloudStarterEurekaServerVersion,
            'org.apache.logging.log4j:log4j-core:'+log4j2Version,
            'com.fasterxml.jackson.core:jackson-databind:'+jacksonVersion

    // Use JUnit test framework
   // testCompile 'junit:junit:4.12'
}

springBoot {
    mainClass = "com.cts.feature.FeatureServer"
}
